$date
	Fri Aug 07 23:42:51 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! Y3 $end
$var wire 1 " Y2 $end
$var wire 1 # Y1 $end
$var reg 1 $ inA1 $end
$var reg 1 % inA2 $end
$var reg 1 & inA3 $end
$var reg 1 ' inB1 $end
$var reg 1 ( inB2 $end
$var reg 1 ) inB3 $end
$var reg 1 * inC1 $end
$var reg 1 + inC2 $end
$var reg 1 , inC3 $end
$var reg 1 - inD3 $end
$scope module E1 $end
$var wire 1 $ A $end
$var wire 1 ' B $end
$var wire 1 * C $end
$var wire 1 # Y1 $end
$var wire 1 . out01 $end
$var wire 1 / out02 $end
$var wire 1 0 out03 $end
$var wire 1 1 outAN $end
$var wire 1 2 outBN $end
$var wire 1 3 outCN $end
$upscope $end
$scope module E2 $end
$var wire 1 % A $end
$var wire 1 ( B $end
$var wire 1 + C $end
$var wire 1 " Y2 $end
$upscope $end
$scope module E3 $end
$var wire 1 & A $end
$var wire 1 ) B $end
$var wire 1 , C $end
$var wire 1 - D $end
$var wire 1 ! Y3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
13
12
11
00
0/
1.
x-
x,
x+
0*
x)
x(
0'
x&
x%
0$
1#
x"
x!
$end
#1
0#
0.
03
1*
#2
1#
1.
13
02
0*
1'
#3
0#
0.
03
1*
#4
1#
10
13
12
01
0*
0'
1$
#5
03
1/
1*
#6
0#
00
13
0/
02
0*
1'
#7
1#
03
1/
1*
#9
1"
0+
0(
0%
#10
1+
#11
0"
0+
1(
#12
1+
#13
1"
0+
0(
1%
#14
1+
#15
0"
0+
1(
#16
1+
#18
1!
0-
0,
0)
0&
#19
0!
1-
#20
0-
1,
#21
1!
1-
#22
0!
0-
0,
1)
#23
1!
1-
#24
0-
1,
#25
0!
1-
#26
0-
0,
0)
1&
#27
1!
1-
#28
0-
1,
#29
0!
1-
#30
1!
0-
0,
1)
#31
0!
1-
#32
0-
1,
#33
1!
1-
